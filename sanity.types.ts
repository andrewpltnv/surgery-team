/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch"
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: "sanity.imagePalette"
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions"
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityFileAsset = {
  _id: string
  _type: "sanity.fileAsset"
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Geopoint = {
  _type: "geopoint"
  lat?: number
  lng?: number
  alt?: number
}

export type Area = {
  _type: "area"
  name?: string
  relatedPost?: {
    _ref: string
    _type: "reference"
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: "post"
  }
}

export type Review = {
  _type: "review"
  name?: string
  review?: string
  date?: string
  source?: string
}

export type Post = {
  _id: string
  _type: "post"
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  expert?: {
    _ref: string
    _type: "reference"
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: "expert"
  }
  mainImage?: {
    asset?: {
      _ref: string
      _type: "reference"
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset"
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: "image"
  }
  categories?: Array<{
    _ref: string
    _type: "reference"
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: "category"
  }>
  publishedAt?: string
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: "span"
          _key: string
        }>
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote"
        listItem?: "bullet"
        markDefs?: Array<{
          href?: string
          _type: "link"
          _key: string
        }>
        level?: number
        _type: "block"
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: "reference"
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset"
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        alt?: string
        _type: "image"
        _key: string
      }
  >
}

export type Expert = {
  _id: string
  _type: "expert"
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  slug?: Slug
  image?: {
    asset?: {
      _ref: string
      _type: "reference"
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset"
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: "image"
  }
  position?: string
  experience?: Experience
  areasOfExpertise?: Array<
    {
      _key: string
    } & Area
  >
  education?: Array<string>
  reviews?: {
    _ref: string
    _type: "reference"
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: "reviews"
  }
}

export type Reviews = {
  _id: string
  _type: "reviews"
  _createdAt: string
  _updatedAt: string
  _rev: string
  expert?: {
    _ref: string
    _type: "reference"
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: "expert"
  }
  reviewsArray?: Array<
    {
      _key: string
    } & Review
  >
}

export type Experience = {
  _type: "experience"
  start?: number
  activity?: string
}

export type Category = {
  _id: string
  _type: "category"
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  description?: string
}

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>
        text?: string
        _type: "span"
        _key: string
      }>
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote"
      listItem?: "bullet"
      markDefs?: Array<{
        href?: string
        _type: "link"
        _key: string
      }>
      level?: number
      _type: "block"
      _key: string
    }
  | {
      asset?: {
        _ref: string
        _type: "reference"
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset"
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      alt?: string
      _type: "image"
      _key: string
    }
>

export type SanityImageCrop = {
  _type: "sanity.imageCrop"
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot"
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: "sanity.imageAsset"
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData"
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata"
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type SanityAssistInstructionTask = {
  _type: "sanity.assist.instructionTask"
  path?: string
  instructionKey?: string
  started?: string
  updated?: string
  info?: string
}

export type SanityAssistTaskStatus = {
  _type: "sanity.assist.task.status"
  tasks?: Array<
    {
      _key: string
    } & SanityAssistInstructionTask
  >
}

export type SanityAssistSchemaTypeAnnotations = {
  _type: "sanity.assist.schemaType.annotations"
  title?: string
  fields?: Array<
    {
      _key: string
    } & SanityAssistSchemaTypeField
  >
}

export type SanityAssistOutputType = {
  _type: "sanity.assist.output.type"
  type?: string
}

export type SanityAssistOutputField = {
  _type: "sanity.assist.output.field"
  path?: string
}

export type SanityAssistInstructionContext = {
  _type: "sanity.assist.instruction.context"
  reference?: {
    _ref: string
    _type: "reference"
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: "assist.instruction.context"
  }
}

export type AssistInstructionContext = {
  _id: string
  _type: "assist.instruction.context"
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  context?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: "span"
      _key: string
    }>
    style?: "normal"
    listItem?: never
    markDefs?: null
    level?: number
    _type: "block"
    _key: string
  }>
}

export type SanityAssistInstructionUserInput = {
  _type: "sanity.assist.instruction.userInput"
  message?: string
  description?: string
}

export type SanityAssistInstructionPrompt = Array<{
  children?: Array<
    | {
        marks?: Array<string>
        text?: string
        _type: "span"
        _key: string
      }
    | ({
        _key: string
      } & SanityAssistInstructionFieldRef)
    | ({
        _key: string
      } & SanityAssistInstructionContext)
    | ({
        _key: string
      } & SanityAssistInstructionUserInput)
  >
  style?: "normal"
  listItem?: never
  markDefs?: null
  level?: number
  _type: "block"
  _key: string
}>

export type SanityAssistInstructionFieldRef = {
  _type: "sanity.assist.instruction.fieldRef"
  path?: string
}

export type SanityAssistInstruction = {
  _type: "sanity.assist.instruction"
  prompt?: SanityAssistInstructionPrompt
  icon?: string
  title?: string
  userId?: string
  createdById?: string
  output?: Array<
    | ({
        _key: string
      } & SanityAssistOutputField)
    | ({
        _key: string
      } & SanityAssistOutputType)
  >
}

export type SanityAssistSchemaTypeField = {
  _type: "sanity.assist.schemaType.field"
  path?: string
  instructions?: Array<
    {
      _key: string
    } & SanityAssistInstruction
  >
}

export type MediaTag = {
  _id: string
  _type: "media.tag"
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: Slug
}

export type Slug = {
  _type: "slug"
  current?: string
  source?: string
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Area
  | Review
  | Post
  | Expert
  | Reviews
  | Experience
  | Category
  | BlockContent
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | SanityAssistInstructionTask
  | SanityAssistTaskStatus
  | SanityAssistSchemaTypeAnnotations
  | SanityAssistOutputType
  | SanityAssistOutputField
  | SanityAssistInstructionContext
  | AssistInstructionContext
  | SanityAssistInstructionUserInput
  | SanityAssistInstructionPrompt
  | SanityAssistInstructionFieldRef
  | SanityAssistInstruction
  | SanityAssistSchemaTypeField
  | MediaTag
  | Slug
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./src/sanity/lib/queries.ts
// Variable: slugsQuery
// Query: *[_type=="expert"].slug.current
export type SlugsQueryResult = Array<string | null>
// Variable: expertBySlugQuery
// Query: *[_type=="expert" && slug.current == $slug][0]{  _id,  name,  slug,  image,  experience,  position,  education,  areasOfExpertise,     schemaMarkup,  reviews->}
export type ExpertBySlugQueryResult = {
  _id: string
  name: string | null
  slug: Slug | null
  image: {
    asset?: {
      _ref: string
      _type: "reference"
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset"
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: "image"
  } | null
  experience: Experience | null
  position: string | null
  education: Array<string> | null
  areasOfExpertise: Array<
    {
      _key: string
    } & Area
  > | null
  schemaMarkup: null
  reviews: {
    _id: string
    _type: "reviews"
    _createdAt: string
    _updatedAt: string
    _rev: string
    expert?: {
      _ref: string
      _type: "reference"
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: "expert"
    }
    reviewsArray?: Array<
      {
        _key: string
      } & Review
    >
  } | null
} | null

// Query TypeMap
import "@sanity/client"
declare module "@sanity/client" {
  interface SanityQueries {
    '*[_type=="expert"].slug.current': SlugsQueryResult
    '*[_type=="expert" && slug.current == $slug][0]{\n  _id,\n  name,\n  slug,\n  image,\n  experience,\n  position,\n  education,\n  areasOfExpertise,   \n  schemaMarkup,\n  reviews->\n}': ExpertBySlugQueryResult
  }
}
